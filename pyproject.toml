[tool.poetry]
name = "poc-object-detection"
version = "0.1.0"
description = "This package is for poc object detection"
authors = ["thanapat.sontayasara <thanapat.sontayasara@outlook.com>"]
readme = "README.md"
packages = [{ include = "poc", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
grpcio = "^1.64.1"
grpcio-tools = "^1.64.1"
ultralytics = "^8.2.49"
torch = "^2.3.1"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
force-exclude = "/(docs|conf)/"

[tool.isort]
profile = "black"
known_pyspark = ["pyspark"]
sections = [
    "FUTURE",
    "STDLIB",
    "PYSPARK",
    "FIRSTPARTY",
    "THIRDPARTY",
    "LOCALFOLDER",
]
import_heading_stdlib = "import: standard" # a module as part of Python's standard library.
import_heading_pyspark = "import: pyspark"
import_heading_firstparty = "import: internal" # a module as being part of the current python project.
import_heading_future = "import: future" # a module as part of Python's internal future compatibility libraries.
import_heading_thirdparty = "import: external" # a module as being part of a third party library.
import_heading_localfolder = "import: private/local" # a module as being a local folder. Generally, this is reserved for relative imports (from . import module).
force_single_line = "true"
include_trailing_comma = "true"
line_length = 100
skip_glob = ["docs/*"]

[tool.poetry_bumpversion.file."src/poc/__init__.py"]
# Duplicate the line above to add more files
